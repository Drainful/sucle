(in-package :sandbox)

(defun fatten (some-array)
  (let* ((total-size (array-total-size some-array))
	 (new-array (make-array total-size)))
    (dotimes (x total-size)
      (setf (aref new-array x) (row-major-aref some-array x)))
    new-array))

(defun getapixel (x y somepic)
  (let* ((dims (array-dimensions somepic))
	 (width (first dims))
	 (depth (third dims)))
    (let ((basenum (+ (*  depth width y) (* depth x))))
      (vector (row-major-aref somepic (+ 0 basenum))
	      (row-major-aref somepic (+ 1 basenum))
	      (row-major-aref somepic (+ 2 basenum))
	      (row-major-aref somepic (+ 3 basenum))))))

(defun flip-image(darray)
  (let* ((dims (array-dimensions darray))
	 (myray (make-array dims)))   
    (dotimes (w (first dims))
      (dotimes (h (second dims))
	(dotimes (val (third dims))
	  (setf
	   (aref myray (- (first dims) w 1) h val)
	   (aref darray w h val)))))   
    myray))
